{%- comment -%} /sections/collection.liquid {%- endcomment -%}

{%- liquid
  assign carousel = false
  assign collection_count = collection.all_products_count
  assign filter_mode = section.settings.filter_mode
  assign filter_by_tags = false
  assign enable_filters = section.settings.enable_filters
  assign filters_layout = section.settings.filters_layout
  assign show_more = section.settings.show_more

  assign columns_mobile = settings.products_per_row_on_mobile | plus: 0

  case columns_mobile
    when 1
      assign size_mobile = 'mobile--one-whole'
    when 2
      assign size_mobile = 'mobile--one-half'
  endcase

  if enable_filters
    if filter_mode == 'tag' or filter_mode == 'group'
      assign filter_by_tags = true
    endif
  endif

  if enable_filters and filter_by_tags
    for tag in current_tags
      unless tag contains '_badge' and tag contains '_preorder'
        assign current_tag_handle = tag | replace: '&#39;', '' | replace: '&#34;', '' | handle
        assign selected_tags = selected_tags | append: current_tag_handle
        unless forloop.last
          assign selected_tags = selected_tags | append: '+'
        endunless
      endunless
    endfor
  endif

  assign columns = settings.products_per_row_on_desktop | plus: 0
  assign enable_sorting = section.settings.enable_sorting
  assign enable_infinity_scroll = settings.enable_infinity_scroll
  assign pagination_limit = columns | times: 12
  assign show_breadcrumbs = section.settings.show_breadcrumbs
  assign bg_color = section.settings.bg_color
  assign products_count = 'products.general.products_with_count' | t: count: collection.products_count

  assign section_class = 'collection collection-items section-padding'
  if enable_filters == false and enable_sorting == false
    assign section_class = section_class | append: ' collection--filters-sorting-disabled'
  else
    if enable_filters == false
      assign section_class = section_class | append: ' collection--filters-disabled'
    elsif enable_sorting == false
      assign section_class = section_class | append: ' collection--sorting-disabled'
    endif
  endif

  unless show_breadcrumbs
    assign section_class = section_class | append: ' collection--breadcrumbs-disabled'
  endunless

  assign id = 'Collection--' | append: section.id
  assign selector_id = '#' | append: id
  assign animations_enabled = settings.animations_enabled
  assign animation_anchor = selector_id
  assign animation_delay = 150
  assign min_sticky_bar_gutter = 40
-%}

{%- style -%}
  :root {
    {%- comment -%}
      Collection sticky bar initial height which is dynamically changed on window load/resize.
      Setting the variable here is mostly helpful for no-js Collection filters positioning.
    {%- endcomment -%}
    {%- if show_breadcrumbs or enable_sorting or enable_filters -%}
      --collection-sticky-bar-height: calc(.75rem * var(--FONT-ADJUST-BODY) + {{ min_sticky_bar_gutter }}px);
    {%- endif -%}

    /* Sidebar Filter Variables */
    --sidebar-width: 280px;
    --sidebar-collapsed-width: 60px;
    --sidebar-transition: all 0.3s ease;
  }

  {{ selector_id }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;
  }

  {%- if bg_color != 'rgba(0,0,0,0)' and bg_color != '' -%}
    .template-collection .collection-section {
      background-color: {{ bg_color }};
    }
    .collection__sidebar-filters {
      --bg: {{ bg_color }};
    }
  {%- endif -%}

  /* Sidebar Filter Styles */
  .collection__layout {
    display: flex;
    gap: 20px;
  }

  .collection__sidebar-filters {
    width: var(--sidebar-width);
    min-width: var(--sidebar-width);
    background: var(--bg, #ffffff);
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    height: fit-content;
    position: sticky;
    top: 20px;
    transition: var(--sidebar-transition);
    overflow: hidden;
  }

  .collection__sidebar-filters.is-collapsed {
    width: var(--sidebar-collapsed-width);
    min-width: var(--sidebar-collapsed-width);
  }

  .collection__sidebar-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 16px 20px;
    border-bottom: 1px solid #e0e0e0;
    background: #f8f9fa;
  }

  .collection__sidebar-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px;
    border-radius: 4px;
    transition: background-color 0.2s ease;
  }

  .collection__sidebar-toggle:hover {
    background-color: #e9ecef;
  }

  .collection__sidebar-title {
    font-weight: 600;
    margin: 0;
    transition: var(--sidebar-transition);
  }

  .collection__sidebar-filters.is-collapsed .collection__sidebar-title {
    opacity: 0;
    width: 0;
    overflow: hidden;
  }

  .collection__sidebar-content {
    padding: 20px;
    transition: var(--sidebar-transition);
  }

  .collection__sidebar-filters.is-collapsed .collection__sidebar-content {
    opacity: 0;
    width: 0;
    padding: 0;
    overflow: hidden;
  }

  .collection__main-content {
    flex: 1;
    min-width: 0;
  }

  .collection__filter-group {
    margin-bottom: 24px;
  }

  .collection__filter-group:last-child {
    margin-bottom: 0;
  }

  .collection__filter__title {
    font-weight: 600;
    margin-bottom: 12px;
    padding: 8px 0;
    border-bottom: 1px solid #f0f0f0;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .collection__filter-tags {
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .collection__filter-tag {
    display: block;
  }

  .filter__button {
    display: block;
    width: 100%;
    padding: 8px 12px;
    text-decoration: none;
    color: #333;
    border-radius: 4px;
    transition: background-color 0.2s ease;
    font-size: 14px;
  }

  .filter__button:hover {
    background-color: #f8f9fa;
    text-decoration: none;
  }

  .collection__filter-tag.is-active .filter__button {
    background-color: #007bff;
    color: white;
  }

  .collection__sticky-bar {
    margin-bottom: 20px;
  }

  /* Mobile Styles */
  @media (max-width: 767px) {
    .collection__layout {
      flex-direction: column;
    }

    .collection__sidebar-filters {
      width: 100%;
      min-width: auto;
      position: relative;
      top: auto;
    }

    .collection__sidebar-filters.is-collapsed {
      width: 100%;
      min-width: auto;
    }

    .collection__sidebar-filters.is-collapsed .collection__sidebar-title,
    .collection__sidebar-filters.is-collapsed .collection__sidebar-content {
      opacity: 1;
      width: auto;
      padding: 20px;
      overflow: visible;
    }
  }

  /* Hide original filter overlay on desktop */
  @media (min-width: 768px) {
    .collection__filters {
      display: none;
    }

    .collection__filters__toggle {
      display: none;
    }
  }
{%- endstyle -%}

<div
  id="{{ id }}"
  class="{{ section_class }}"
  data-section-type="collection-template"
  data-section-id="{{ section.id }}"
  data-enable-filters="{{ enable_filters }}"
  data-enable-sorting="{{ enable_sorting }}"
  data-filters-default-state="{{ filters_layout }}"
  data-collapsible-transition-override
  data-filter-mode="{{ filter_mode }}"
  {% if filter_by_tags %}
    data-collection="{{ collection.url | default: routes.all_products_collection_url }}"
    data-tags="{{ selected_tags }}"
  {% endif %}
>
  <div class="collection__wrapper" data-collection-wrapper>
    <div class="wrapper--full-padded">
      <div class="collection__inner">
        {%- if show_breadcrumbs or enable_filters or enable_sorting -%}
          <div
            id="CollectionStickyBar"
            class="collection__sticky-bar"
            data-collection-sticky-bar
            {% if animations_enabled %}
              data-aos="fade"
              data-aos-anchor="{{ animation_anchor }}"
              data-aos-delay="{{ animation_delay }}"
              {%- assign animation_delay = animation_delay | plus: 150 -%}
            {% endif %}
          >
            {%- if show_breadcrumbs -%}
              {%- render 'breadcrumbs' -%}
            {%- endif -%}

            {%- if enable_sorting -%}
              {%- assign sort_by = search.sort_by
                | default: collection.sort_by
                | default: collection.default_sort_by
              -%}
              {%- assign sort_options = search.sort_options | default: collection.sort_options -%}

              <div class="collection__sort-bar">
                <button type="button" class="collection__sort__label" data-sort-toggle>
                  {{ 'collections.sorting.title' | t }}
                  {%- render 'icon-select' -%}
                </button>

                <div class="collection__sort__option-wrapper" data-collection-sort-options>
                  <div class="collection__sort__options">
                    <ul
                      class="collection__filter-tags collection__filter-tags--default"
                      collection-sort-by="{{ sort_by }}"
                    >
                      {%- for option in sort_options -%}
                        <li class="collection__filter-tag">
                          <input
                            class="collection__sort__input"
                            type="radio"
                            name="sort_by_bar"
                            value="{{ option.value }}"
                            id="filter-bar-{{ option.name | handle | append: option.value | handle | append: section.id }}"
                            data-input-sort
                            {% if option.value == sort_by %}
                              checked
                            {% endif %}
                          >
                          <label
                            class="collection__sort__button"
                            for="filter-bar-{{ option.name | handle | append: option.value | handle | append: section.id }}"
                            tabindex="0"
                          >
                            {{- option.name -}}
                          </label>
                        </li>
                      {%- endfor -%}
                    </ul>

                    <noscript>
                      <button type="submit" class="btn btn--primary btn--solid">
                        {{ 'collection.filters.sort_button' | t }}
                      </button>
                    </noscript>
                  </div>
                </div>
              </div>
            {%- endif -%}

            <div class="collection__products-count" data-products-count="{{ products_count }}">
              {{- products_count -}}
            </div>

            {%- comment -%} Mobile filter toggle (keep for mobile) {%- endcomment -%}
            {%- if enable_filters or enable_sorting -%}
              <button
                class="collection__filters__toggle"
                aria-label="{{ 'products.general.filters' | t }}"
                data-toggle-filters
              >
                {%- render 'icon-filter' -%}
              </button>
            {%- endif -%}
          </div>
        {%- endif -%}

        <div class="collection__layout">
          {%- comment -%} Sidebar Filters {%- endcomment -%}
          {%- if enable_filters -%}
            {%- liquid
              assign filters_available = false
              assign filter_count = 0
              assign all_active_tags_count = 0

              capture sort_param
                if collection.sort_by != collection.default_sort_by
                  assign sort_parameter = '/?'
                  if collection.current_type or collection.current_vendor
                    assign sort_parameter = '&'
                  endif
                  echo sort_parameter | append: 'sort_by=' | append: collection.sort_by
                endif
              endcapture
            -%}

            {%- capture filters -%}
              {%- case filter_mode -%}
                {%- when 'default' -%}
                  {%- liquid
                    if collection.filters != empty
                      assign filters_available = true
                    endif

                    for filter in collection.filters
                      render 'filter-sidebar', filter: filter, animation_delay: animation_delay, filters_layout: filters_layout, index: forloop.index, show_more: show_more
                    endfor
                  -%}

                {%- when 'tag' -%}
                  {%- liquid
                    assign is_active = false
                    assign active_count = 0
                    assign active_tag_filters = ''
                    assign tags_list = ''
                    assign filters_counter = 0

                    for tag in collection.all_tags
                      assign filters_available = true
                      unless tag contains '_badge' or tag contains '_preorder'
                        if current_tags contains tag
                          assign is_active = true
                          assign active_count = active_count | plus: 1
                          assign all_active_tags_count = all_active_tags_count | plus: 1
                        endif
                      endunless
                    endfor

                    assign toggle_state = true
                    if filters_layout == 'closed'
                      assign toggle_state = false
                    endif
                    if is_active
                      assign toggle_state = true
                    endif
                  -%}

                  <div class="collection__filter-group" data-collection-filter>
                    <button type="button" class="collection__filter__title{% if toggle_state %} is-expanded{% endif %}"
                      aria-expanded="{{ toggle_state }}"
                      aria-controls="CollectionFilter--tags"
                      data-filter-active="{{ is_active }}"
                      data-collapsible-trigger>
                      {{- 'products.general.filter_by' | t -}}
                      <span class="collection__filter__count">
                        {%- render 'icon-toggle-plus' -%}
                        {%- render 'icon-toggle-minus' -%}
                      </span>
                    </button>

                    <div id="CollectionFilter--tags"
                      class="collection__filter-tags-wrapper{% if toggle_state %} is-expanded{% endif %}"
                      aria-expanded="{% if toggle_state %}true{% else %}false{% endif %}"
                      data-collapsible-container
                      {% if toggle_state %}style="height:auto;"{% endif %}>
                      <ul class="collection__filter-tags" data-collapsible-content>
                        {%- for tag in collection.all_tags -%}
                          {%- unless tags_list contains tag or tag contains '_badge' or tag contains '_preorder' -%}
                            {%- capture temp_list -%}{{ tags_list | append: tag | append: ' ' }}{%- endcapture -%}
                            {%- liquid
                              assign tags_list = temp_list
                              assign current_tag_handle = tag | replace: '&#39;', '' | replace: '&#34;', '' | handle

                              if current_tags contains tag
                                assign linked_tags = selected_tags | remove: current_tag_handle
                                assign filter_count = filter_count | plus: 1
                              else
                                assign linked_tags = selected_tags | append: '+' | append: current_tag_handle
                              endif

                              capture tag_link
                                echo collection.url
                                if linked_tags != blank
                                  echo '/' | append: linked_tags
                                endif
                                echo sort_param
                              endcapture

                              assign tag_link = tag_link | replace: '/+', '/' | replace: '++', '+' | replace: '+?', '?'

                              capture filter_classes
                                echo 'collection__filter-tag'
                                if current_tags contains tag
                                  echo ' is-active'
                                endif
                              endcapture
                            -%}

                            <li class="{{ filter_classes }}" data-collection-filter-tag>
                              <a href="{{ tag_link }}"
                                class="filter__button"
                                data-tag="{{ tag | handleize }}"
                                data-collection-filter-tag-button>
                                {{ tag }}
                              </a>
                            </li>
                          {%- endunless -%}
                        {%- endfor -%}
                      </ul>
                    </div>
                  </div>

                {%- when 'group' -%}
                  {%- liquid
                    assign groups = ''
                    assign active_tag_filters = ''

                    for tag in collection.all_tags
                      assign tag_parts = tag | split: '_'
                      if tag_parts.size == 2
                        assign groups = groups | append: tag_parts.first | append: ','
                      endif
                    endfor

                    assign groups = groups | split: ',' | compact | uniq
                    assign color_label = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ','
                    assign special_tags = '_preorder,_badge' | split: ','
                  -%}

                  {%- for group in groups -%}
                    {%- liquid
                      assign is_active = false
                      assign active_count = 0
                      assign group_label = group | downcase
                      assign group_with_suffix = group | append: '_'
                    -%}

                    {%- unless special_tags contains group_label or group_label == blank -%}
                      {%- liquid
                        assign filters_available = true
                        for tag in current_tags
                          if tag contains group_with_suffix
                            assign is_active = true
                            assign active_count = active_count | plus: 1
                            assign all_active_tags_count = all_active_tags_count | plus: 1
                          endif
                        endfor

                        assign toggle_state = false
                        case filters_layout
                          when 'open'
                            assign toggle_state = true
                          when 'first-open'
                            if forloop.index == 1
                              assign toggle_state = true
                            endif
                        endcase

                        if is_active
                          assign toggle_state = true
                        endif

                        if color_label contains group_label and settings.enable_color_swatches_collection
                          assign is_color = true
                        else
                          assign is_color = false
                        endif
                      -%}

                      <div class="collection__filter-group" data-collection-filter>
                        <button type="button" class="collection__filter__title{% if toggle_state %} is-expanded{% endif %}"
                          aria-expanded="{{ toggle_state }}"
                          aria-controls="CollectionFilter--{{ group | handle }}-{{ forloop.index }}"
                          data-filter-active="{{ is_active }}"
                          data-collapsible-trigger>
                          <span>{{- group -}}{% if active_count > 0 %} ({{ active_count }}){% endif %}</span>
                          <span class="collection__filter__count">
                            {%- render 'icon-toggle-plus' -%}
                            {%- render 'icon-toggle-minus' -%}
                          </span>
                        </button>

                        <div id="CollectionFilter--{{ group | handle }}-{{ forloop.index }}"
                          class="collection__filter-tags-wrapper{% if toggle_state %} is-expanded{% endif %}"
                          aria-expanded="{% if toggle_state %}true{% else %}false{% endif %}"
                          data-collapsible-container
                          {% if toggle_state %}style="height:auto;"{% endif %}>
                          <ul class="collection__filter-tags{% if is_color %} collection__filter-tags--swatches{% endif %}" data-collapsible-content>
                            {%- for tag in collection.all_tags -%}
                              {%- liquid
                                assign tag_parts = tag | split: '_'
                                assign group_tag = tag_parts.last
                                assign current_tag_handle = tag | replace: '&#39;', '' | replace: '&#34;', '' | handle

                                if current_tags contains tag
                                  assign linked_tags = selected_tags | remove: current_tag_handle
                                else
                                  assign linked_tags = selected_tags | append: '+' | append: current_tag_handle
                                endif

                                capture tag_link
                                  echo collection.url
                                  if linked_tags != blank
                                    echo '/' | append: linked_tags
                                  endif
                                  echo sort_param
                                endcapture

                                assign tag_link = tag_link | replace: '/+', '/' | replace: '++', '+' | replace: '+?', '?'
                              -%}

                              {%- if tag_parts.first == group -%}
                                {%- liquid
                                  capture filter_classes
                                    echo 'collection__filter-tag'
                                    if current_tags contains tag
                                      echo ' is-active'
                                    endif
                                  endcapture
                                -%}

                                <li class="{{ filter_classes }}" data-collection-filter-tag>
                                  <a href="{{ tag_link }}"
                                    class="filter__button"
                                    data-tag="{{ tag | handleize }}"
                                    data-collection-filter-tag-button>
                                    {{- group_tag -}}
                                  </a>
                                </li>
                              {%- endif -%}
                            {%- endfor -%}
                          </ul>
                        </div>
                      </div>
                    {%- endunless -%}
                  {%- endfor -%}
              {%- endcase -%}
            {%- endcapture -%}

            <aside class="collection__sidebar-filters" data-sidebar-filters>
              <div class="collection__sidebar-header">
                <h3 class="collection__sidebar-title">{{ 'products.general.filters' | t }}</h3>
                <button class="collection__sidebar-toggle" data-sidebar-toggle aria-label="Toggle filters">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                    <path d="M6 9L10 5L11 6L7 10L6 9Z" fill="currentColor"/>
                  </svg>
                </button>
              </div>

              {%- if filters_available -%}
                <div class="collection__sidebar-content">
                  <form data-collection-filters-form>
                    {% if collection.current_type %}
                      <input type="hidden" name="q" value="{{ collection.current_type }}">
                    {% endif %}
                    {% if collection.current_vendor %}
                      <input type="hidden" name="q" value="{{ collection.current_vendor }}">
                    {% endif %}

                    {{- filters -}}
                  </form>
                </div>
              {%- endif -%}
            </aside>
          {%- endif -%}

          {%- comment -%} Main Content Area {%- endcomment -%}
          <div class="collection__main-content">
            {%- paginate collection.products by pagination_limit -%}
              <div
                class="collection__products collection-items--{{ columns }} collection-items--{{ size_mobile }}"
                data-collection-products
              >
                {%- if collection_count > 0 -%}
                  {%- if collection.products_count > 0 -%}
                    <div
                      class="grid"
                      {% if enable_infinity_scroll %}
                        id="AjaxinateLoop" data-ajaxinate-id="{{ section.id }}"
                      {% endif %}
                    >
                      {%- assign tablet_counter = 1 -%}
                      {%- assign mobile_counter = 1 -%}

                      {%- liquid
                        for product in collection.products
                          assign animation_delay = forloop.index0 | modulo: columns | times: 1
                          render 'product-grid-item', product: product, animation_delay: animation_delay, tablet_counter: tablet_counter, mobile_counter: mobile_counter, item_index: forloop.index0
                          assign tablet_counter = tablet_counter | plus: 1
                          assign mobile_counter = mobile_counter | plus: 1
                        endfor
                      -%}
                    </div>
                  {%- else -%}
                    <div class="collection--no-results">
                      <p class="no-matches">
                        {{ 'collections.general.no_matches_by_filter' | t: products_count: collection.products_count }}
                      </p>
                    </div>
                  {%- endif -%}

                {%- elsif collection.handle != 'all' and collection_count == 0 -%}
                  <div class="collection--no-results">
                    <p class="no-matches">{{ 'collections.general.no_matches' | t }}</p>
                    <a href="{{ routes.root_url }}" class="btn btn--primary btn--solid">
                      {{- 'general.404.button_text' | t -}}
                    </a>
                  </div>
                {%- endif -%}

                {%- if enable_infinity_scroll -%}
                  <div
                    class="pagination pagination--infinite"
                    id="AjaxinatePagination"
                    data-ajaxinate-id="{{ section.id }}"
                  >
                    {%- if paginate.next -%}
                      <div class="pagination__loading">
                        <a href="{{ paginate.next.url }}">
                          <span class="visually-hidden">{{ 'general.pagination.next' | t }}</span>
                        </a>
                      </div>
                    {%- endif -%}
                  </div>

                  {%- if paginate.pages > 1 -%}
                    <noscript>
                      {%- render 'pagination', paginate: paginate -%}
                    </noscript>
                  {%- endif -%}

                {%- else -%}
                  {%- if paginate.pages > 1 -%}
                    {%- render 'pagination', paginate: paginate -%}
                  {%- endif -%}
                {%- endif -%}
              </div>
            {%- endpaginate -%}
          </div>
        </div>

        {%- comment -%} Keep original mobile filters (hidden on desktop) {%- endcomment -%}
        {%- if enable_filters or enable_sorting -%}
          <div class="collection__filters" data-collection-filters>
            <div class="collection__filters-wrapper" data-collection-filters-wrapper>
              <div class="collection__filters-list">
                <div class="collection__filters-list__inner" data-collection-filters-list>
                  <form data-collection-filters-form>
                    {% if collection.current_type %}
                      <input type="hidden" name="q" value="{{ collection.current_type }}">
                    {% endif %}
                    {% if collection.current_vendor %}
                      <input type="hidden" name="q" value="{{ collection.current_vendor }}">
                    {% endif %}

                    <div class="collection__filters-header">
                      <button class="collection__filters__close" type="button" data-close-filters>
                        <span class="visually-hidden">{{ 'products.general.close' | t }}</span>
                        {%- render 'icon-close' -%}
                      </button>

                      {%- if enable_filters -%}
                        <div class="collection__filters__top">
                          <div class="collection__filters__title">
                            <span>{{- 'products.general.filters' | t -}}</span>
                          </div>
                        </div>
                      {%- endif -%}
                    </div>

                    {%- if enable_sorting -%}
                      <div class="collection__sort">
                        <button
                          type="button"
                          class="collection__sort__label label-typography"
                          aria-expanded="false"
                          aria-controls="CollectionSorting"
                          data-collapsible-trigger
                        >
                          {{ 'collections.sorting.title' | t }}
                          {%- render 'icon-toggle-plus' -%}
                          {%- render 'icon-toggle-minus' -%}
                        </button>

                        <div
                          id="CollectionSorting"
                          class="collection__sort__option-wrapper"
                          aria-expanded="false"
                          data-collapsible-container
                        >
                          <div class="collection__sort__options" data-collapsible-content>
                            <ul class="collection__filter-tags collection__filter-tags--default">
                              {%- assign sort_by = search.sort_by
                                | default: collection.sort_by
                                | default: collection.default_sort_by
                              -%}
                              {%- assign sort_options = search.sort_options | default: collection.sort_options -%}
                              {%- for option in sort_options -%}
                                <li class="collection__filter-tag">
                                  <input
                                    class="collection__sort__input"
                                    type="radio"
                                    name="sort_by"
                                    value="{{ option.value }}"
                                    id="filter-{{ option.name | handle | append: option.value | handle | append: section.id }}"
                                    data-input-sort
                                    {% if option.value == sort_by %}
                                      checked
                                    {% endif %}
                                  >
                                  <label
                                    class="collection__sort__button"
                                    for="filter-{{ option.name | handle | append: option.value | handle | append: section.id }}"
                                  >
                                    {{- option.name -}}
                                  </label>
                                </li>
                              {%- endfor -%}
                            </ul>

                            <noscript>
                              <button type="submit" class="btn btn--primary btn--solid">
                                {{ 'collection.filters.sort_button' | t }}
                              </button>
                            </noscript>
                          </div>
                        </div>
                      </div>
                    {%- endif -%}

                    {%- if enable_filters -%}
                      {{- filters -}}
                    {%- endif -%}
                  </form>
                </div>

                {%- if enable_filters -%}
                  <div class="collection__filters-bottom">
                    <button
                      class="collection__filters__close-bottom btn btn--primary"
                      type="button"
                      data-close-filters
                    >
                      {{- 'collection.filters.close' | t -}}
                    </button>
                  </div>
                {%- endif -%}
              </div>
            </div>
          </div>
        {%- endif -%}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Sidebar toggle functionality
    const sidebarToggle = document.querySelector('[data-sidebar-toggle]');
    const sidebar = document.querySelector('[data-sidebar-filters]');

    if (sidebarToggle && sidebar) {
      sidebarToggle.addEventListener('click', function() {
        sidebar.classList.toggle('is-collapsed');

        // Update aria-label for accessibility
        const isCollapsed = sidebar.classList.contains('is-collapsed');
        sidebarToggle.setAttribute('aria-label', isCollapsed ? 'Expand filters' : 'Collapse filters');

        // Rotate arrow icon
        const icon = sidebarToggle.querySelector('svg');
        if (icon) {
          icon.style.transform = isCollapsed ? 'rotate(-90deg)' : 'rotate(0deg)';
        }
      });
    }

    // Enhanced collapsible filter groups
    const filterTriggers = document.querySelectorAll('[data-collapsible-trigger]');

    filterTriggers.forEach(trigger => {
      trigger.addEventListener('click', function() {
        const container = document.getElementById(this.getAttribute('aria-controls'));
        const isExpanded = this.getAttribute('aria-expanded') === 'true';

        // Toggle states
        this.setAttribute('aria-expanded', !isExpanded);
        container.setAttribute('aria-expanded', !isExpanded);

        // Toggle classes
        this.classList.toggle('is-expanded');
        container.classList.toggle('is-expanded');

        // Animate height
        if (!isExpanded) {
          container.style.height = 'auto';
          const height = container.scrollHeight + 'px';
          container.style.height = '0px';
          container.offsetHeight; // Force reflow
          container.style.height = height;
        } else {
          container.style.height = '0px';
        }
      });
    });

    // Store sidebar state in localStorage (optional)
    const storageKey = 'collection-sidebar-collapsed';

    // Restore sidebar state on page load
    if (sidebar && localStorage.getItem(storageKey) === 'true') {
      sidebar.classList.add('is-collapsed');
      if (sidebarToggle) {
        sidebarToggle.setAttribute('aria-label', 'Expand filters');
        const icon = sidebarToggle.querySelector('svg');
        if (icon) {
          icon.style.transform = 'rotate(-90deg)';
        }
      }
    }

    // Save sidebar state when toggled
    if (sidebarToggle) {
      sidebarToggle.addEventListener('click', function() {
        const isCollapsed = sidebar.classList.contains('is-collapsed');
        localStorage.setItem(storageKey, isCollapsed);
      });
    }
  });
</script>

{% schema %}
{
  "name": "Collection pages",
  "class": "collection-section",
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "checkbox",
      "id": "show_breadcrumbs",
      "label": "Show breadcrumbs",
      "default": true
    },
    {
      "type": "header",
      "content": "Filters and sorting"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "label": "Enable sorting",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_filters",
      "label": "Enable filters",
      "default": true
    },
    {
      "type": "select",
      "label": "Default filter layout",
      "id": "filters_layout",
      "info": "Desktop only",
      "default": "open",
      "options": [
        { "label": "All filters open", "value": "open" },
        { "label": "All filters closed", "value": "closed" },
        { "label": "First filter open", "value": "first-open" }
      ]
    },
    {
      "type": "checkbox",
      "id": "show_more",
      "label": "Show a subset of filters from each group",
      "info": "Check this setting if you have a large number of filters, and want them to take up less space",
      "default": true
    },
    {
      "type": "select",
      "label": "Filter mode",
      "id": "filter_mode",
      "info": "Filters by group requires specific tag formatting. [Learn more](https://presidiocreative.com/link/palo-alto/docs/collection-filtering)",
      "default": "default",
      "options": [
        { "label": "Default (Faceted)", "value": "default" },
        { "label": "By tag", "value": "tag" },
        { "label": "By group", "value": "group" }
      ]
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background"
    },
    {
      "type": "header",
      "content": "Section spacing"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding top",
      "default": 30
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding bottom",
      "default": 60
    }
  ],
  "blocks": [
    {
      "type": "promo",
      "name": "Promo",
      "limit": 5,
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection",
          "info": "Show on specific collection only"
        },
        {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
        },
        {
          "type": "header",
          "content": "Layout"
        },
        {
          "type": "range",
          "id": "position",
          "label": "Show in position",
          "min": 1,
          "max": 48,
          "step": 1,
          "default": 1
        },
        {
          "type": "select",
          "id": "width",
          "label": "Width",
          "default": "auto",
          "options": [
            { "value": "full", "label": "Full width" },
            { "value": "half", "label": "2 grid items" },
            { "value": "auto", "label": "Grid item" }
          ]
        },
        {
          "type": "header",
          "content": "Text"
        },
        {
          "type": "richtext",
          "id": "title",
          "label": "Heading",
          "default": "<p>Promotion title</p>",
          "info": "Highlight one or two key words in your heading by italicizing them, then choose the highlight option below"
        },
        {
          "type": "header",
          "content": "Highlight"
        },
        {
          "type": "select",
          "id": "heading_highlight_type",
          "label": "Type",
          "default": "circle",
          "options": [
            { "value": "italics", "label": "Italics (no decoration)" },
            { "value": "highlight", "label": "Highlight" },
            { "value": "highlight-color", "label": "Text color" },
            { "value": "underline", "label": "Underline" },
            { "value": "squiggle", "label": "Squiggle" },
            { "value": "circle", "label": "Circle" },
            { "value": "stroke", "label": "Stroke (outlined text)" }
          ]
        },
        {
          "type": "color",
          "id": "highlight_color",
          "label": "Highlight color",
          "default": "#D43747"
        },
        {
          "type": "color",
          "id": "highlight_text_color",
          "label": "Text color",
          "default": "#FFFFFF"
        },
        {
          "type": "range",
          "id": "heading_size",
          "label": "Heading size",
          "default": 100,
          "min": 100,
          "max": 200,
          "step": 10,
          "unit": "%"
        },
        {
          "type": "textarea",
          "id": "content",
          "label": "Text",
          "default": "Advertise a promotion or a sale"
        },
        {
          "type": "range",
          "id": "text_size",
          "label": "Text size",
          "default": 100,
          "min": 100,
          "max": 200,
          "step": 5,
          "unit": "%"
        },
        {
          "type": "select",
          "id": "text_color",
          "label": "Text color",
          "default": "text-light",
          "options": [
            {
              "value": "text-light",
              "label": "Light"
            },
            {
              "value": "text-dark",
              "label": "Dark"
            }
          ]
        },
        {
          "type": "select",
          "id": "text_position",
          "label": "Content position",
          "default": "bottom-left",
          "options": [
            { "value": "left", "label": "Left" },
            { "value": "center", "label": "Center" },
            { "value": "right", "label": "Right" },
            { "value": "bottom-left", "label": "Bottom left" },
            { "value": "bottom-right", "label": "Bottom right" },
            { "value": "top-left", "label": "Top left" },
            { "value": "top-right", "label": "Top right" }
          ]
        },
        {
          "type": "select",
          "id": "layout",
          "label": "Content layout",
          "default": "stacked",
          "options": [
            { "label": "Inline", "value": "inline" },
            { "label": "Stacked", "value": "stacked" }
          ],
          "info": "The 'Inline' option only applies on desktop when the promo width is 'Full width'"
        },
        {
          "type": "range",
          "id": "overlay_opacity",
          "label": "Text contrast",
          "info": "Improves readability of text",
          "min": 0,
          "max": 95,
          "step": 5,
          "unit": "%",
          "default": 10
        },
        {
          "type": "color",
          "id": "bg_color",
          "label": "Background color",
          "default": "#D3D3D3",
          "info": "Applies if no image is chosen"
        },
        {
          "type": "header",
          "content": "Button"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text",
          "info": "Leave blank to link entire image"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button URL"
        },
        {
          "type": "select",
          "id": "button_color",
          "label": "Button color",
          "default": "btn--white",
          "options": [
            { "label": "Primary", "value": "btn--primary" },
            { "label": "Secondary", "value": "btn--secondary" },
            { "label": "White", "value": "btn--white" },
            { "label": "Black", "value": "btn--black" }
          ]
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button style",
          "default": "btn--solid-border",
          "options": [
            { "label": "Solid", "value": "btn--solid" },
            { "label": "Outline", "value": "btn--outline" },
            { "label": "Solid with border", "value": "btn--solid-border" },
            { "label": "Text", "value": "btn--text" }
          ]
        },
        {
          "type": "select",
          "id": "button_size",
          "label": "Size",
          "default": "btn--small",
          "options": [
            { "label": "Large", "value": "btn--large" },
            { "label": "Medium", "value": "btn--medium" },
            { "label": "Small", "value": "btn--small" }
          ]
        }
      ]
    }
  ]
}
{% endschema %}
